name: Deploy React App to EC2

on:
  push:
    branches:
      - main


jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      IMAGE_TAG: ${{ github.sha }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Set ECR_REGISTRY output
      run: echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV

    - name: Build, tag, and push image to ECR
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        envs: ECR_REPOSITORY,IMAGE_TAG,ECR_REGISTRY,AWS_REGION,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY
        script: |
          echo "REGISTRY: $ECR_REGISTRY"
          echo "REPO: $ECR_REPOSITORY"
          echo "TAG: $IMAGE_TAG"
          echo "REGION: $AWS_REGION"
          echo "AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY: ${#AWS_SECRET_ACCESS_KEY}"  # just to check length

          export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          export ECR_REPOSITORY=$ECR_REPOSITORY
          export IMAGE_TAG=$IMAGE_TAG
          export AWS_REGION=$AWS_REGION
          export ECR_REGISTRY=$ECR_REGISTRY

          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

          docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker stop piclight_frontend || true
          docker rm piclight_frontend || true
          docker run -d -p 80:80 --name piclight_frontend $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG